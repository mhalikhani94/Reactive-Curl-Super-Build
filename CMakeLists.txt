cmake_minimum_required(VERSION 3.15)
include(ExternalProject)

IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH <comment> FORCE)
ELSE()
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH <comment> FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS "-O1")

ExternalProject_Add(jsoncpp
	URL "https://github.com/nlohmann/json/archive/refs/tags/v3.11.2.zip"
	CMAKE_ARGS
		-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
		-DJSON_BuildTests=OFF
		-DJSON_MultipleHeaders=OFF
)

set (JSONCPP_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)

ExternalProject_Add(yamlcpp
	DEPENDS jsoncpp
	URL "https://github.com/jbeder/yaml-cpp/archive/refs/tags/yaml-cpp-0.7.0.zip"
	CMAKE_ARGS
		-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
		-DYAML_BUILD_SHARED_LIBS=OFF
)

set (YAMLCPP_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
set (YAMLCPP_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/libyaml-cpp.a)

ExternalProject_Add(zlib
	DEPENDS yamlcpp
	URL "https://github.com/madler/zlib/archive/refs/tags/v1.2.12.zip"
	CMAKE_ARGS
		-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
)

set (ZLIB_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
if(WIN32)
	set (ZLIB_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/libzlibstatic.a)
else()
	set (ZLIB_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/libz.a)
endif(WIN32)

ExternalProject_Add(openssl
	DEPENDS zlib
	URL "https://github.com/janbar/openssl-cmake/archive/refs/tags/1.1.1n-20220327.tar.gz"
	CMAKE_ARGS
		-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
		-DWITH_APPS=OFF
)

set (OPENSSL_ROOT_DIR ${CMAKE_INSTALL_PREFIX}/ssl)
set (OPENSSL_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
set (OPENSSL_SSL_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/libssl.a)
set (OPENSSL_CRYPTO_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/libcrypto.a)

ExternalProject_Add(curl
	DEPENDS openssl
	URL "https://github.com/curl/curl/releases/download/curl-7_84_0/curl-7.84.0.tar.gz"
	CMAKE_ARGS
		-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
		-DCURL_USE_OPENSSL=ON
		-DCURL_STATICLIB=1
		-DBUILD_SHARED_LIBS=0
		-DCURL_USE_LIBPSL=OFF
		-DUSE_LIBIDN2=OFF
		-DCURL_USE_LIBSSH2=OFF
		-DOPENSSL_ROOT_DIR=${OPENSSL_ROOT_DIR}
		-DOPENSSL_INCLUDE_DIR=${OPENSSL_INCLUDE_DIR}
		-DOPENSSL_USE_STATIC_LIBS=TRUE
		-DBUILD_CURL_EXE=0
)

set (CURL_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
set (CURL_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/libcurl.a)

ExternalProject_Add(reactive-curl
	DEPENDS curl
	URL "https://github.com/mhalikhani94/Reactive-Curl/archive/refs/tags/v0.0.3.1.zip"
	CMAKE_ARGS
		-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
		-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
		-DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
		-DOPENSSL_ROOT_DIR=${OPENSSL_ROOT_DIR}
		-DCURL_INCLUDE_DIRS=${CURL_INCLUDE_DIR}
		-DOPENSSL_INCLUDE_DIR=${OPENSSL_INCLUDE_DIR}
		-DZLIB_INCLUDE_DIR=${ZLIB_INCLUDE_DIR}
		-DJSONCPP_INCLUDE_DIR=${JSONCPP_INCLUDE_DIR}
		-DYAMLCPP_INCLUDE_DIR=${YAMLCPP_INCLUDE_DIR}
		-DYAMLCPP_LIBRARIES=${YAMLCPP_LIBRARIES}
		-DCURL_LIBRARIES=${CURL_LIBRARIES}
		-DZLIB_LIBRARIES=${ZLIB_LIBRARIES}
		-DOPENSSL_SSL_LIBRARIES=${OPENSSL_SSL_LIBRARIES}
		-DOPENSSL_CRYPTO_LIBRARIES=${OPENSSL_CRYPTO_LIBRARIES}
		-DOPENSSL_USE_STATIC_LIBS=TRUE
)

